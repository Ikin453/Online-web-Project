import * as React from 'react';
<<<<<<< HEAD
import type { DataNode, InternalDataEntity, SimpleModeConfig, FieldNames } from '../interface';
=======
import type { DataNode, InnerDataNode, SimpleModeConfig } from '../interface';
>>>>>>> 0c1d8533fd9ba5f385e7fc867e325dccfff5259b
/**
 * Convert `treeData` or `children` into formatted `treeData`.
 * Will not re-calculate if `treeData` or `children` not change.
 */
<<<<<<< HEAD
export default function useTreeData(treeData: DataNode[], children: React.ReactNode, { getLabelProp, simpleMode, fieldNames, }: {
    getLabelProp: (node: DataNode) => React.ReactNode;
    simpleMode: boolean | SimpleModeConfig;
    fieldNames: FieldNames;
}): InternalDataEntity[];
=======
export default function useTreeData(treeData: DataNode[], children: React.ReactNode, { getLabelProp, simpleMode, }: {
    getLabelProp: (node: DataNode) => React.ReactNode;
    simpleMode: boolean | SimpleModeConfig;
}): InnerDataNode[];
>>>>>>> 0c1d8533fd9ba5f385e7fc867e325dccfff5259b
