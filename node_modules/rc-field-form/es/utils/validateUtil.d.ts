<<<<<<< HEAD
import type { InternalNamePath, ValidateOptions, RuleObject, StoreValue, RuleError } from '../interface';
=======
import type { InternalNamePath, ValidateOptions, RuleObject, StoreValue } from '../interface';
>>>>>>> 0c1d8533fd9ba5f385e7fc867e325dccfff5259b
/**
 * We use `async-validator` to validate the value.
 * But only check one value in a time to avoid namePath validate issue.
 */
<<<<<<< HEAD
export declare function validateRules(namePath: InternalNamePath, value: StoreValue, rules: RuleObject[], options: ValidateOptions, validateFirst: boolean | 'parallel', messageVariables?: Record<string, string>): Promise<RuleError[]>;
=======
export declare function validateRules(namePath: InternalNamePath, value: StoreValue, rules: RuleObject[], options: ValidateOptions, validateFirst: boolean | 'parallel', messageVariables?: Record<string, string>): Promise<string[]>;
>>>>>>> 0c1d8533fd9ba5f385e7fc867e325dccfff5259b
